{"version":3,"sources":["hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Error.js","imagen.jpg","components/Formulario.js","components/Cotizacion.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","Selection","useCriptomoneda","CoinInfo","Name","FullName","Id","MensajeError","p","Error","mensaje","Container","div","Form","form","CryptoImage","img","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","src","Imagen","onSubmit","preventDefault","type","ResultadoDiv","Datos","Precio","span","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Contenedor","Heading","h1","ContenedorFlex","App","guardarResultado","url","DISPLAY","cotizarCriptomoneda","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5dd7c0e.chunk.js","sourcesContent":["import { Fragment, useState,  } from \"react\";\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n  \r\n  color:black;\r\n  font-weight:bold;\r\n  font-size: 1.5rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n  margin-bottom:1rem;\r\n\r\n \r\n\r\n\r\n`;\r\n\r\nconst Select = styled.select`\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: block;\r\n    width:80%;\r\n    height:40px;\r\n    border: none;\r\n    border-bottom: solid 1px black;\r\n    font-size: 16px;\r\n    margin-bottom:1rem;\r\n    outline: none;\r\n    border-inline-style: none;\r\n    font-family: 'Poppins', sans-serif;\r\n\r\n    \r\n    \r\n\r\n`;\r\n\r\n\r\n\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n\r\n    //State de nuestro custom hook\r\n\r\n    const [state, actualizarState] = useState(stateInicial);\r\n    \r\n    const Seleccionar =() =>(\r\n         <Fragment>\r\n             <Label>{label}</Label>\r\n             <Select\r\n              onChange = { e => actualizarState(e.target.value)}\r\n              value ={state}\r\n             >\r\n                 <option value =\"\">--Seleccione--</option>\r\n                 {opciones.map(opcion =>(\r\n                     <option key ={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\r\n                 ))}\r\n             </Select>\r\n         </Fragment>\r\n\r\n    );\r\n\r\n    //Retornar state, interfaz y funcion que modifica el state.\r\n    return [state, Seleccionar, actualizarState];\r\n\r\n    \r\n}\r\n \r\nexport default useMoneda;","import { Fragment, useState } from \"react\";\r\nimport styled from '@emotion/styled';\r\n\r\n\r\n\r\nconst Label = styled.label`\r\n  \r\n  color:black;\r\n  font-weight:bold;\r\n  font-size: 1.5rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n  margin-bottom:1rem;\r\n  width: 90%;\r\n\r\n\r\n`;\r\n\r\nconst Selection = styled.select`\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: block;\r\n    width:80%;\r\n    height:40px;\r\n    border: none;\r\n    border-bottom: solid 1px black;\r\n    font-size: 16px;\r\n    margin-bottom:1rem;\r\n    outline: none;\r\n    border-inline-style: none;\r\n    font-family: 'Poppins', sans-serif;\r\n    \r\n    \r\n\r\n`;\r\n\r\n\r\n\r\n\r\nconst useCriptomoneda = (label, stateInicial, opciones) => {\r\n\r\n    //State de nuestro custom hook\r\n\r\n    const [state, actualizarState] = useState(stateInicial);\r\n    \r\n    const SelectCripto =() =>(\r\n         <Fragment>\r\n             <Label>{label}</Label>\r\n             <Selection\r\n              onChange = { e => actualizarState(e.target.value)}\r\n              value ={state}\r\n             >\r\n                 <option value =\"\">--Seleccione--</option>\r\n                 {opciones.map(opcion =>(\r\n                     <option key ={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName}</option>\r\n                 ))}\r\n             </Selection>\r\n         </Fragment>\r\n\r\n    );\r\n\r\n    //Retornar state, interfaz y funcion que modifica el state.\r\n    return [state, SelectCripto, actualizarState];\r\n\r\n    \r\n}\r\n \r\nexport default useCriptomoneda;","import styled from '@emotion/styled'\r\n\r\nconst MensajeError = styled.p`\r\n  background-image: linear-gradient(45deg, #f3666a 0%, #fad0c4 99%, #fad0c4 100%);\r\n  padding: 3px;\r\n  color: whitesmoke;\r\n  font-family: 'Poppins', sans-serif;\r\n  font-size: 20px;\r\n  font-weight:bold;\r\n  text-align:center;\r\n  border-radius:5px;\r\n  width: 90%;\r\n  \r\n`\r\n\r\nconst  Error = ({mensaje}) => {\r\n    return (\r\n        <MensajeError>{mensaje}</MensajeError>\r\n      );\r\n}\r\n \r\nexport default  Error;","export default __webpack_public_path__ + \"static/media/imagen.81a35be9.jpg\";","import styled from '@emotion/styled';\r\nimport useMoneda from '../hooks/useMoneda'\r\nimport useCriptomoneda from '../hooks/useCriptomoneda'\r\nimport {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport Error from './Error';\r\nimport Imagen from '../imagen.jpg'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 75%;\r\n  \r\n  @media (max-width: 1200px){\r\n   margin-bottom :50px ;\r\n   display: flex;\r\n   flex-direction: column;\r\n   width: 100%;\r\n   justify-content:;\r\n   align-items:center;\r\n   margin-top: 10px;\r\n   \r\n\r\n  }\r\n\r\n  \r\n  \r\n\r\n  \r\n  `;\r\n\r\nconst Form = styled.form`\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content:center;\r\n  align-items:center;\r\n  background-color: white;\r\n  width: 50%;\r\n  padding: ;\r\n  @media (max-width: 1200px){\r\n    width: 70%;\r\n    \r\n  }\r\n  \r\n          \r\n            \r\n    \r\n`;\r\n\r\nconst CryptoImage = styled.img`\r\n  width: 50%;\r\n  \r\n  @media (max-width: 1200px){\r\n    width: 70%;\r\n    \r\n  }\r\n`;\r\n\r\n\r\nconst Boton = styled.input`\r\n  background: #222;\r\n  height: 40px;\r\n  width: 70%;\r\n  border: none;\r\n  color: #eee;\r\n  font-size: 40px;\r\n  position: relative;\r\n  transition: 1s;\r\n  -webkit-tap-highlight-color: transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  outline:none;\r\n  font-family: 'Poppins', sans-serif;\r\n  margin-bottom: 10px;\r\n \r\n\r\n  &:hover {\r\n    background-color:rgba(236, 40, 138, 0.836);\r\n    \r\n    \r\n    \r\n\r\n  }\r\n  \r\n`\r\n\r\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\r\n\r\n  // state del listado de criptomonedas\r\n\r\n  const [ listacripto, guardarCriptomonedas] = useState ([]);\r\n  const [error, guardarError]= useState(false);\r\n\r\n  const Monedas = [\r\n    {codigo: 'USD', nombre: 'Dolar de Estados Unidos'},\r\n    {codigo: 'MXN', nombre: 'Peso Mexicano'},\r\n    {codigo: 'EUR', nombre: 'Euro'},\r\n    {codigo: 'GBP', nombre: 'Libra'}\r\n  ];\r\n  \r\n    // Utilizar useMoneda\r\n    const [moneda, SelectMonedas,] = useMoneda('Elige tu moneda', '', Monedas);\r\n\r\n    //Utilizar Criptomoneda\r\n\r\n    const [criptomoneda, SelectCripto] = useCriptomoneda('Elige tu Criptomoneda', '', listacripto);\r\n\r\n    //Ejecutar llamado a la API\r\n    useEffect(()=>{\r\n        const consultarAPI = async ()=> {\r\n           const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\r\n\r\n           const resultado =await axios.get(url);\r\n           guardarCriptomonedas(resultado.data.Data);\r\n        }\r\n\r\n         \r\n        \r\n\r\n        consultarAPI();\r\n    },[]);\r\n\r\n    //submit\r\n    const cotizarMoneda = e => {\r\n      e.preventDefault();\r\n\r\n      //validar\r\n      if(moneda ==='' || criptomoneda ===''){\r\n        guardarError(true);\r\n        return;\r\n      }\r\n\r\n      //pasar los datos al componente principal\r\n\r\n      guardarError(false);\r\n      guardarMoneda(moneda);\r\n      guardarCriptomoneda(criptomoneda);\r\n\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n         <CryptoImage src={Imagen}/>\r\n        <Form\r\n         onSubmit = {cotizarMoneda}\r\n        >\r\n          \r\n           {error ? <Error mensaje=\"Todos los campos son obligatorios\"/>: null}\r\n\r\n           <SelectMonedas />\r\n\r\n           <SelectCripto />\r\n\r\n            <Boton\r\n              type =\"submit\"\r\n              value=\"Calcular\"\r\n            />\r\n\r\n        </Form>\r\n        </Container>\r\n      );\r\n}\r\n \r\nexport default Formulario;","import styled from '@emotion/styled'\r\n\r\nconst ResultadoDiv = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-wrap: wrap;\r\nwidth:60%;\r\ntransition: ease-in-out .7;\r\n@media (max-width: 1200px){\r\n    width: 60%;\r\n    margin-bottom: 50px;\r\n    \r\n  }\r\n\r\n  @media (max-width: 700px){\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap:5px;\r\n      width:100%;\r\n  }\r\n     \r\n`;\r\n\r\nconst Datos = styled.p`\r\n \r\n display: flex;\r\n flex-direction: column;\r\n justify-content: center;\r\n align-items: center;\r\n background: transparent;\r\n border:solid 1px white;\r\n margin-left: 10px;\r\n height: 125px;\r\n padding: 5px;\r\n width: 40%;\r\n color: white;\r\n transition: ease-in-out .4s;\r\n\r\n :hover{\r\n    box-shadow:0 5px 5px rgba(194, 14, 89, 0.5);\r\n    transform:translateY(-5px);\r\n }\r\n \r\n`;\r\n\r\nconst Precio = styled.span`\r\n font-weight:bold;\r\n`\r\n\r\n\r\nconst Cotizacion = ({resultado}) => {\r\n\r\n    if(Object.keys(resultado).length === 0) return null;\r\n\r\n    \r\n\r\n    return ( \r\n         <ResultadoDiv>\r\n             <Datos>El precio es: <Precio>{resultado.PRICE}</Precio></Datos>\r\n             <Datos>El precio mas alto del dia: <Precio>{resultado.HIGHDAY}</Precio></Datos>\r\n             <Datos>El precio mas bajo del dia: <Precio>{resultado.LOWDAY}</Precio></Datos>\r\n             <Datos>Variación de las últimas 24h: <Precio>{resultado.CHANGEPCT24HOUR}</Precio></Datos>\r\n             <Datos>Última actualización: <Precio>{resultado.LASTUPDATE}</Precio></Datos>\r\n         </ResultadoDiv>\r\n\r\n     );\r\n}\r\n \r\nexport default Cotizacion;","\n\nimport styled from 'styled-components';\nimport Formulario from './components/Formulario';\nimport {useState, useEffect, Fragment} from  'react';\nimport axios from 'axios';\nimport Cotizacion from './components/Cotizacion';\n\n\n\n\nconst Contenedor = styled.div`\n\n   display: flex;\n   flex-direction: column;\n   width: 100%;\n   margin-top:20px;\n\n   @media (max-width: 1200px){\n   \n     \n    \n  }\n   \n   \n   \n`;\n\n\n\nconst Heading = styled.h1`\n\n\ncolor:rgb(236, 40, 138);\npadding: 20px;\nwidth: 100%;\n\n`;\n\nconst ContenedorFlex = styled.div`\n \n display: flex;\n align-items: center;\n justify-content:space-evenly;\n width: 80%;\n margin: auto;\n\n @media (max-width: 1200px){\n   display:flex;\n   flex-direction: column;\n   width: 100%;\n   \n}\n \n`;\n\nfunction App() {\n\n  const[moneda, guardarMoneda] = useState('');\n  const [criptomoneda, guardarCriptomoneda] = useState('');\n  const [resultado, guardarResultado] = useState ({});\n\n  useEffect(()=>{\n\n    const cotizarCriptomoneda = async () =>{\n\n      //evitamos la ejecución la primera vez\n    if (moneda ==='') return;\n\n    //consultar la api para la cotizacion.\n    const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n    const resultado = await axios.get(url);\n\n    guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n\n    }\n\n    cotizarCriptomoneda();\n\n },[moneda, criptomoneda]);\n\n  return (\n\n    <Fragment>\n    <Heading>CryptoCris</Heading>\n    <Contenedor>\n      \n    <ContenedorFlex>\n      <Formulario\n          guardarMoneda ={guardarMoneda}\n          guardarCriptomoneda ={guardarCriptomoneda}\n          \n\n        />\n         <Cotizacion\n           resultado = {resultado}\n        />\n      </ContenedorFlex>\n       \n       \n    </Contenedor>\n    </Fragment>\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}